spring:
    application:
        name: playground
    kafka:
        consumer:
            bootstrap-servers: localhost:9092
            key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
            properties:
                schema.registry.url: "http://localhost:8081"
                specific.avro.reader: true
                spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
                spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
            max-poll-records: 500
        producer:
            bootstrap-servers: localhost:9092
            properties:
                schema.registry.url: "http://localhost:8081"
                value.subject.name.strategy: io.confluent.kafka.serializers.subject.RecordNameStrategy
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            client-id: playground
        listener:
            type: batch

server:
    port: 8080
    shutdown: "graceful"

management:
    endpoints:
        web:
            exposure:
                include: health,info,metrics,prometheus
    prometheus:
        metrics:
            export:
                enabled: true
strategy:
    email:
        enabled: true
